/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itson.vista;

import java.awt.event.ItemEvent;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.itson.dao.TramiteDAO;
import org.itson.dominio.Licencia;
import org.itson.dominio.Persona;
import org.itson.dominio.Placa;
import org.itson.dominio.Tramite;
import org.itson.interfaces.ITramite;
import org.itson.utilidades.ConfiguracionPaginado;

/**
 * Esta clase se encarga de mostrar al usuario los trámites realizados por una persona. 
 * 
 * @author Ángel Valenzuela, Luis Duran
 */
public class FrmHistorial extends javax.swing.JFrame {

    private Persona persona;
    private ITramite tramiteDAO;
    private ConfiguracionPaginado configPaginado;
    private ConfiguracionPaginado configPaginadoSiguiente;
    private int contFilas;

    /**
     * Método constructor que inicializa los atributos
     *
     * @param persona Persona la cual se tienen los registros de los trámites
     */
    public FrmHistorial(Persona persona) {
        initComponents();
        this.persona = persona;
        asignarDatosLabels();
        tramiteDAO = new TramiteDAO();
        configPaginado = new ConfiguracionPaginado();
        configPaginadoSiguiente = new ConfiguracionPaginado();
        configPaginadoSiguiente.setNumeroPagina(1);
        cargarTablaTramites();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorial = new javax.swing.JTable();
        lblRFC = new javax.swing.JLabel();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        cmbPaginas = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        lblTitulo.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(105, 28, 50));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Módulo de historial");
        lblTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblNombre.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(105, 28, 50));
        lblNombre.setText("Persona:");

        btnRegresar.setBackground(new java.awt.Color(159, 34, 65));
        btnRegresar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.setBorderPainted(false);
        btnRegresar.setFocusPainted(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        tblHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trámite", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistorial.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblHistorial);
        if (tblHistorial.getColumnModel().getColumnCount() > 0) {
            tblHistorial.getColumnModel().getColumn(0).setResizable(false);
            tblHistorial.getColumnModel().getColumn(1).setResizable(false);
        }

        lblRFC.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lblRFC.setForeground(new java.awt.Color(105, 28, 50));
        lblRFC.setText("RFC:");

        btnAnterior.setBackground(new java.awt.Color(159, 34, 65));
        btnAnterior.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAnterior.setForeground(new java.awt.Color(255, 255, 255));
        btnAnterior.setText("<--");
        btnAnterior.setBorderPainted(false);
        btnAnterior.setFocusPainted(false);
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setBackground(new java.awt.Color(159, 34, 65));
        btnSiguiente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setText("-->");
        btnSiguiente.setBorderPainted(false);
        btnSiguiente.setFocusPainted(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        cmbPaginas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "5", "10" }));
        cmbPaginas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPaginasItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(cmbPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addComponent(lblNombre)
                .addGap(18, 18, 18)
                .addComponent(lblRFC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Método de evento que se ejecuta cuando el usuario presiona el botón de regresar.
     * Cierra la ventana y se abre la ventana anterior.
     * @param evt El objeto ActionEvent que representa el evento del botón de regresar.
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        new FrmConsulta().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed
   
    /**
     * Método de evento que se ejecuta cuando el usuario presiona el botón de anterior.
     * Manda a llamar a un método que retrocede de página de la tabla del historial.
     * @param evt El objeto ActionEvent que representa el evento del botón de anterior.
     */
    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        retrocederPagina();
    }//GEN-LAST:event_btnAnteriorActionPerformed
    
    /**
     * Método de evento que se ejecuta cuando el usuario presiona el botón de siguiente.
     * Manda a llamar a un método que avanza de página de la tabla del historial.
     * @param evt El objeto ActionEvent que representa el evento del botón de siguiente.
     */
    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        avanzarPagina();
    }//GEN-LAST:event_btnSiguienteActionPerformed
    
    /**
     * Método de evento que actualiza la tabla dependiendo del valor que se elige en el combobox.
     * @param evt El objeto ItemEvent que representa el evento del combobox de paginado.
     */
    private void cmbPaginasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPaginasItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            int elementosPorPagina = Integer.parseInt((String) evt.getItem());
            int numeroPagina = 0;
            this.configPaginado.setElementosPorPagina(elementosPorPagina);
            this.configPaginado.setNumeroPagina(numeroPagina);
            this.configPaginadoSiguiente.setElementosPorPagina(elementosPorPagina);
            this.configPaginadoSiguiente.setNumeroPagina(numeroPagina + 1);
            cargarTablaTramites();
        }
    }//GEN-LAST:event_cmbPaginasItemStateChanged
    /**
     * Método que asigna los datos correspondientes de las personas a labels.
     */
    private void asignarDatosLabels() {
        lblNombre.setText("Nombre: " + persona.getNombre() + " " + persona.getApellidoPaterno() + " " + persona.getApellidoMaterno());
        lblRFC.setText("RFC: " + persona.getRfc());
    }

    /**
     * Este método carga y recarga la tabla de trámites.
     */
    private void cargarTablaTramites() {
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblHistorial.getModel();
        modeloTabla.setRowCount(0);
        List<Tramite> listaTramites = tramiteDAO.consultarTramitesPersona(persona.getRfc(), configPaginado);
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        for (Tramite t : listaTramites) {
            if (t instanceof Placa) {
                Object[] fila = {"Placa", formatoFecha.format(t.getFechaExpedicion().getTime())};
                modeloTabla.addRow(fila);
            } else if (t instanceof Licencia) {
                Object[] fila = {"Licencia", formatoFecha.format(t.getFechaExpedicion().getTime())};
                modeloTabla.addRow(fila);
            }
        }
        controlarBotones(listaTramites);
    }
    
    /**
     * Método que controla los botones dependiendo si la tabla está vacia.
     * @param listaTramites Lista de trámites que contiene la tabla para verificar si está vacia.
     */
    private void controlarBotones(List listaTramites) {
        if (listaTramites.isEmpty()) {
            cmbPaginas.setEnabled(false);
        } else {
            cmbPaginas.setEnabled(true);
        }
        if (tramiteDAO.consultarTramitesPersona(persona.getRfc(), configPaginadoSiguiente).isEmpty()) {
            btnSiguiente.setEnabled(false);
        } else {
            btnSiguiente.setEnabled(true);
        }
        if (configPaginado.getNumeroPagina() == 0) {
            btnAnterior.setEnabled(false);
        } else {
            btnAnterior.setEnabled(true);
        }
    }
    
    /**
     * Método que avanza de página en la tabla de historial.
     */
    private void avanzarPagina() {
        configPaginado.avanzarPagina();
        configPaginadoSiguiente.avanzarPagina();
        cargarTablaTramites();
    }
    
    /**
     * Método que retrocede de página en la tabla de historial.
     */
    private void retrocederPagina() {
        configPaginado.retrocederPagina();
        configPaginadoSiguiente.retrocederPagina();
        cargarTablaTramites();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox<String> cmbPaginas;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRFC;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblHistorial;
    // End of variables declaration//GEN-END:variables
}
